{"version":3,"sources":["index.tsx"],"names":["start","Date","end","setMinutes","getMinutes","schedules","calendarId","category","isVisible","title","id","body","setHours","getHours","calendars","name","color","bgColor","dragBgColor","borderColor","App","cal","useRef","useState","sched","setSched","ImportFromFileBodyComponent","fileReader","handleFileRead","e","content","result","console","log","jsonObject","csv","lines","split","headers","i","length","obj","currentline","j","push","csvJSON","className","type","accept","onChange","file","target","files","FileReader","onloadend","readAsText","onClickSchedule","useCallback","onBeforeCreateSchedule","scheduleData","schedule","String","Math","random","isAllDay","dueDateClass","location","raw","class","state","current","calendarInst","createSchedules","onBeforeDeleteSchedule","res","deleteSchedule","onBeforeUpdateSchedule","changes","updateSchedule","_getTimeTemplate","html","time","date","h","m","_getFormattedTime","isPrivate","isReadOnly","recurrenceRule","attendees","join","templates","ref","height","useCreationPopup","useDetailPopup","template","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.891022cc.chunk.js","sourcesContent":["import React, { useCallback, useRef, useState, useEffect } from \"react\";\nimport { render } from \"react-dom\";\n\nimport TUICalendar from \"@toast-ui/react-calendar\";\nimport { ISchedule, ICalendarInfo } from \"tui-calendar\";\n\nimport \"tui-calendar/dist/tui-calendar.css\";\nimport \"tui-date-picker/dist/tui-date-picker.css\";\nimport \"tui-time-picker/dist/tui-time-picker.css\";\n\nimport \"./styles.css\";\n\nconst csvJSON = csv => {\n  let lines=csv.split(\"\\n\");\n  let result = [];\n  let headers=lines[0].split(\",\");\n\n  for(let i=1;i<lines.length;i++){\n\t  let obj = {};\n\t  let currentline=lines[i].split(\",\");\n\t  for(let j=0;j<headers.length;j++){\n\t\t  obj[headers[j]] = currentline[j];\n\t  }\n\t  result.push(obj);\n  }\n  return result; //JavaScript object\n  //return JSON.stringify(result); //JSON\n}\n\n\n\n\n\nconst start = new Date();\nconst end = new Date(new Date().setMinutes(start.getMinutes() + 30));\nconst schedules: ISchedule[] = [\n  {\n    calendarId: \"1\",\n    category: \"time\",\n    isVisible: true,\n    title: \"Study\",\n    id: \"1\",\n    body: \"Test\",\n    start,\n    end\n  },\n  {\n    calendarId: \"2\",\n    category: \"time\",\n    isVisible: true,\n    title: \"Meeting\",\n    id: \"2\",\n    body: \"Description\",\n    start: new Date(new Date().setHours(start.getHours() + 1)),\n    end: new Date(new Date().setHours(start.getHours() + 2))\n  }\n];\n\nconst calendars: ICalendarInfo[] = [\n  {\n    id: \"1\",\n    name: \"My Calendar\",\n    color: \"#ffffff\",\n    bgColor: \"#9e5fff\",\n    dragBgColor: \"#9e5fff\",\n    borderColor: \"#9e5fff\"\n  },\n  {\n    id: \"2\",\n    name: \"Company\",\n    color: \"#ffffff\",\n    bgColor: \"#00a9ff\",\n    dragBgColor: \"#00a9ff\",\n    borderColor: \"#00a9ff\"\n  }\n];\n\nfunction App() {\n  const cal = useRef(null);\n  const [sched,setSched] = useState([])\n\n  const ImportFromFileBodyComponent = () => {\n    let fileReader;\n    \n    const handleFileRead = (e) => {\n      const content = fileReader.result;\n      console.log(content)\n      \n      const jsonObject = csvJSON (content)\n      console.log(jsonObject)\n      setSched(jsonObject)\n      // … do something with the 'content' …\n    };\n    \n    const handleFileChosen = (file) => {\n      fileReader = new FileReader();\n      fileReader.onloadend = handleFileRead;\n      fileReader.readAsText(file);\n    };\n    \n    return <div className='upload-expense'>\n      <input\n        type='file'\n        id='file'\n        className='input-file'\n        accept='.csv'\n        onChange={e => handleFileChosen(e.target.files[0])}\n      />\n    </div>;\n  };\n\n\n\n  const onClickSchedule = useCallback(e => {\n    console.log(e);\n  }, []);\n\n  const onBeforeCreateSchedule = useCallback(scheduleData => {\n    console.log(scheduleData);\n\n    const schedule = {\n      id: String(Math.random()),\n      title: scheduleData.title,\n      isAllDay: scheduleData.isAllDay,\n      start: scheduleData.start,\n      end: scheduleData.end,\n      category: scheduleData.isAllDay ? \"allday\" : \"time\",\n      dueDateClass: \"\",\n      location: scheduleData.location,\n      raw: {\n        class: scheduleData.raw[\"class\"]\n      },\n      state: scheduleData.state\n    };\n\n    cal.current.calendarInst.createSchedules([schedule]);\n  }, []);\n\n  const onBeforeDeleteSchedule = useCallback(res => {\n    console.log(res);\n\n    const { id, calendarId } = res.schedule;\n\n    cal.current.calendarInst.deleteSchedule(id, calendarId);\n  }, []);\n\n  const onBeforeUpdateSchedule = useCallback(e => {\n    console.log(e);\n\n    const { schedule, changes } = e;\n\n    cal.current.calendarInst.updateSchedule(\n      schedule.id,\n      schedule.calendarId,\n      changes\n    );\n  }, []);\n\n  function _getFormattedTime(time) {\n    const date = new Date(time);\n    const h = date.getHours();\n    const m = date.getMinutes();\n\n    return `${h}:${m}`;\n  }\n\n  function _getTimeTemplate(schedule, isAllDay) {\n    var html = [];\n\n    if (!isAllDay) {\n      html.push(\"<strong>\" + _getFormattedTime(schedule.start) + \"</strong> \");\n    }\n    if (schedule.isPrivate) {\n      html.push('<span class=\"calendar-font-icon ic-lock-b\"></span>');\n      html.push(\" Private\");\n    } else {\n      if (schedule.isReadOnly) {\n        html.push('<span class=\"calendar-font-icon ic-readonly-b\"></span>');\n      } else if (schedule.recurrenceRule) {\n        html.push('<span class=\"calendar-font-icon ic-repeat-b\"></span>');\n      } else if (schedule.attendees.length) {\n        html.push('<span class=\"calendar-font-icon ic-user-b\"></span>');\n      } else if (schedule.location) {\n        html.push('<span class=\"calendar-font-icon ic-location-b\"></span>');\n      }\n      html.push(\" \" + schedule.title);\n    }\n\n    return html.join(\"\");\n  }\n\n  const templates = {\n    time: function(schedule) {\n      console.log(schedule);\n      return _getTimeTemplate(schedule, false);\n    }\n  };\n\n  console.log({schedules})\n\n  return (\n    <div className=\"App\">\n\t  \n\t\n      <h1>Welcome to TOAST Ui Calendar</h1>\n\t  \n\t    <ImportFromFileBodyComponent />\n\t  \n      <TUICalendar\n        ref={cal}\n        height=\"1000px\"\n        useCreationPopup={true}\n        useDetailPopup={true}\n        template={templates}\n        calendars={calendars}\n        schedules={sched}\n        onClickSchedule={onClickSchedule}\n        onBeforeCreateSchedule={onBeforeCreateSchedule}\n        onBeforeDeleteSchedule={onBeforeDeleteSchedule}\n        onBeforeUpdateSchedule={onBeforeUpdateSchedule}\n      />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}